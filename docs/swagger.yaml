definitions:
  booking.CreateBookingResponse:
    properties:
      customer_name:
        type: string
      id:
        type: integer
      status:
        type: string
      time:
        type: string
      unit_id:
        type: integer
    type: object
  booking.GetBookingListResponse:
    properties:
      bookings:
        items:
          $ref: '#/definitions/booking.GetBookingListResponse_01'
        type: array
    type: object
  booking.GetBookingListResponse_01:
    properties:
      customer_name:
        type: string
      id:
        type: integer
      status:
        type: string
      time:
        type: string
      unit_id:
        type: integer
    type: object
  booking.UpdateBookingResponse:
    properties:
      customer_name:
        type: string
      id:
        type: integer
      status:
        type: string
      time:
        type: string
      unit_id:
        type: integer
    type: object
  enum.UnitStatus:
    enum:
    - idle
    - in_use
    type: string
    x-enum-varnames:
    - Idle
    - InUse
  login.LoginPostResponse:
    properties:
      session_token:
        type: string
      username:
        type: string
    type: object
  register.RegisterPostResponse:
    properties:
      role:
        type: string
      session_token:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  snack.DeleteSnackResponse:
    properties:
      status:
        type: string
    type: object
  snack.GetSnackResponse:
    properties:
      snacks:
        items:
          $ref: '#/definitions/snack.SnackResponse'
        type: array
    type: object
  snack.PostSnackResponse:
    properties:
      snack:
        $ref: '#/definitions/snack.SnackResponse'
    type: object
  snack.PutSnackResponse:
    properties:
      snack:
        $ref: '#/definitions/snack.SnackResponse'
    type: object
  snack.SnackResponse:
    properties:
      category:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      rental_id:
        type: string
      stock:
        type: integer
    type: object
  unit.DeleteUnitResponse:
    properties:
      status:
        type: string
    type: object
  unit.GetUnit:
    properties:
      category:
        type: string
      hourly_price:
        type: integer
      id:
        type: integer
      name:
        type: string
      rental_id:
        type: string
      status:
        $ref: '#/definitions/unit.GetUnitStatus'
    type: object
  unit.GetUnitResponse:
    properties:
      units:
        items:
          $ref: '#/definitions/unit.GetUnit'
        type: array
    type: object
  unit.GetUnitStatus:
    properties:
      booked:
        type: boolean
      latest_finish_time:
        type: string
      latest_start_time:
        type: string
      status:
        $ref: '#/definitions/enum.UnitStatus'
      tarif:
        type: integer
    type: object
  unit.PostUnit:
    properties:
      category:
        type: string
      hourly_price:
        type: integer
      id:
        type: integer
      name:
        type: string
      rental_id:
        type: string
    type: object
  unit.PostUnitResponse:
    properties:
      unit:
        $ref: '#/definitions/unit.PostUnit'
    type: object
  unit.PutUnit:
    properties:
      category:
        type: string
      hourly_price:
        type: integer
      id:
        type: integer
      name:
        type: string
      rental_id:
        type: string
    type: object
  unit.PutUnitResponse:
    properties:
      unit:
        $ref: '#/definitions/unit.PutUnit'
    type: object
  unitsession.GetUnitSessionsResponse:
    properties:
      total:
        type: integer
      unit_sessions:
        items:
          $ref: '#/definitions/unitsession.UnitSessionResponse'
        type: array
    type: object
  unitsession.SnackTransactionResponse:
    properties:
      id:
        type: integer
      quantity:
        type: integer
      snack_name:
        type: string
      total:
        type: integer
    type: object
  unitsession.StartUnitSessionsResponse:
    properties:
      status:
        $ref: '#/definitions/unitsession.startUnitSessionsStatus'
      unit_id:
        type: integer
      unit_name:
        type: string
    type: object
  unitsession.StopUnitSessionsResponse:
    properties:
      status:
        $ref: '#/definitions/unitsession.stopUnitSessionsStatus'
      unit_id:
        type: integer
      unit_name:
        type: string
    type: object
  unitsession.UnitSessionResponse:
    properties:
      finish_time:
        type: string
      grand_total:
        type: integer
      id:
        type: integer
      snack_transactions:
        items:
          $ref: '#/definitions/unitsession.SnackTransactionResponse'
        type: array
      start_time:
        type: string
      tarif:
        type: integer
      unit_id:
        type: integer
    type: object
  unitsession.startUnitSessionsStatus:
    properties:
      finish_time:
        type: string
      start_time:
        type: string
      status:
        $ref: '#/definitions/enum.UnitStatus'
    type: object
  unitsession.stopUnitSessionsStatus:
    properties:
      finish_time:
        type: string
      start_time:
        type: string
      status:
        $ref: '#/definitions/enum.UnitStatus'
    type: object
  user.GET.response:
    properties:
      created_at:
        type: string
      id:
        type: string
      rental_id:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  title: CashierStation Backend Server API
  version: "1.0"
paths:
  /api/booking:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Get booking list
      parameters:
      - description: Search by customer name
        in: query
        name: customer_name
        type: string
      - description: Select by Unit ID
        in: query
        name: unit_id
        type: integer
      - description: Select by status
        enum:
        - waiting
        - accepted
        - rejected
        in: query
        name: status
        type: string
      - description: Select by unit in use
        in: query
        name: unit_in_use
        type: boolean
      - default: 10
        description: Limit number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset results
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.GetBookingListResponse'
      security:
      - Booking: []
      tags:
      - api/booking
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Submit new booking
      parameters:
      - description: Customer name
        in: query
        name: customer_name
        required: true
        type: string
      - description: Unit ID
        in: query
        name: unit_id
        required: true
        type: integer
      - description: 'Booking time in RFC3339 format (ex: 2023-06-01T08:00:00Z)'
        in: query
        name: time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.CreateBookingResponse'
      security:
      - Booking: []
      tags:
      - api/booking
  /api/booking/{id}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Update info booking, bisa dipakai untuk accept/reject booking juga
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer name
        in: query
        name: customer_name
        type: string
      - description: Unit ID
        in: query
        name: unit_id
        type: integer
      - description: 'Booking time in RFC3339 format (ex: 2023-06-01T08:00:00Z)'
        in: query
        name: time
        type: string
      - description: Booking status
        enum:
        - waiting
        - accepted
        - rejected
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.UpdateBookingResponse'
      security:
      - Booking: []
      tags:
      - api/booking
  /api/employee/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Get list of employees from access token
      parameters:
      - description: Access token from Auth0
        in: query
        name: access_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GET.response'
      security:
      - SessionToken: []
      tags:
      - api/employee
  /api/snack:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Snack
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/snack.GetSnackResponse'
      security:
      - SessionToken: []
      tags:
      - api/snack
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Snack
      parameters:
      - description: Snack name
        in: query
        name: name
        required: true
        type: string
      - description: Snack price
        in: query
        name: price
        required: true
        type: integer
      - description: Snack category
        in: query
        name: category
        required: true
        type: string
      - default: 0
        description: Snack stock
        in: query
        name: stock
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/snack.PostSnackResponse'
      security:
      - SessionToken: []
      tags:
      - api/snack
  /api/snack/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Snack
      parameters:
      - description: Snack ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/snack.DeleteSnackResponse'
      security:
      - SessionToken: []
      tags:
      - api/snack
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Snack
      parameters:
      - description: Snack ID
        in: path
        name: id
        required: true
        type: integer
      - description: Snack name
        in: query
        name: name
        type: string
      - description: Snack category
        in: query
        name: category
        type: string
      - description: Snack price
        in: query
        name: price
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/snack.PutSnackResponse'
      security:
      - SessionToken: []
      tags:
      - api/snack
  /api/snack/restock:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Snack
      parameters:
      - description: Snack ID
        in: query
        name: snack_id
        required: true
        type: integer
      - description: Quantity
        in: query
        name: quantity
        required: true
        type: integer
      - description: Total harga kulakan
        in: query
        name: price
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/snack.PostSnackResponse'
      security:
      - SessionToken: []
      tags:
      - api/snack
  /api/snack/transaction:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Snack
      parameters:
      - description: Unit ID
        in: query
        name: unit_id
        required: true
        type: integer
      - description: Snack ID
        in: query
        name: snack_id
        required: true
        type: integer
      - description: Quantity
        in: query
        name: quantity
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/snack.PostSnackResponse'
      security:
      - SessionToken: []
      tags:
      - api/snack
  /api/unit:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Unit
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unit.GetUnitResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Unit
      parameters:
      - description: Unit name
        in: query
        name: name
        required: true
        type: string
      - description: Unit hourly price
        in: query
        name: hourly_price
        required: true
        type: integer
      - description: Unit category
        in: query
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unit.PostUnitResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit
  /api/unit/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unit.DeleteUnitResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Unit
      parameters:
      - description: Unit ID
        in: path
        name: id
        required: true
        type: integer
      - description: Unit name
        in: query
        name: name
        type: string
      - description: Unit hourly price
        in: query
        name: hourly_price
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unit.PutUnitResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit
  /api/unit_session:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Sesi pemakaian unit
      parameters:
      - description: unit id
        in: query
        name: unit_id
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        type: integer
      - default: 10
        description: limit
        in: query
        name: limit
        type: integer
      - default: desc
        description: order
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - default: start_time
        description: sort_by
        enum:
        - id
        - unit_id
        - start_time
        - finish_time
        - tarif
        in: query
        name: sort_by
        type: string
      - default: false
        description: select only latest session for each unit
        in: query
        name: latest
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unitsession.GetUnitSessionsResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit_session
  /api/unit_session/start/{unit_id}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Sesi pemakaian unit
      parameters:
      - description: Unit ID
        in: path
        name: unit_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unitsession.StartUnitSessionsResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit_session
  /api/unit_session/stop/{unit_id}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Sesi pemakaian unit
      parameters:
      - description: Unit ID
        in: path
        name: unit_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/unitsession.StopUnitSessionsResponse'
      security:
      - SessionToken: []
      tags:
      - api/unit_session
  /api/user:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GET.response'
      security:
      - SessionToken: []
      tags:
      - api/user
  /auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/auth/login
        prod: https://csbackend.fly.dev/auth/login
      parameters:
      - description: Access token from Auth0
        in: query
        name: access_token
        required: true
        type: string
      - description: Username
        in: query
        maxLength: 32
        minLength: 3
        name: username
        required: true
        type: string
      - description: Password (Numeric)
        in: query
        maxLength: 32
        minLength: 6
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/login.LoginPostResponse'
      summary: Login a new employee/owner account
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/auth/register
        prod: https://csbackend.fly.dev/auth/register
      parameters:
      - description: Access token from Auth0
        in: query
        name: access_token
        required: true
        type: string
      - description: Username
        in: query
        maxLength: 32
        minLength: 3
        name: username
        required: true
        type: string
      - description: Password (Numeric)
        in: query
        maxLength: 32
        minLength: 6
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/register.RegisterPostResponse'
      summary: Register a new employee/owner account
      tags:
      - auth
  /jobs:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/jobs
        prod: https://csbackend.fly.dev/jobs
      produces:
      - application/json
      responses: {}
      tags:
      - jobs
  /metrics:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/metrics
        prod: https://csbackend.fly.dev/metrics
      produces:
      - application/json
      responses: {}
      tags:
      - metrics
  /metrics/db:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/metrics
        prod: https://csbackend.fly.dev/metrics
      produces:
      - application/json
      responses: {}
      tags:
      - metrics
  /oauth/callback:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: Callback
      produces:
      - application/json
      responses: {}
      summary: Endpoint the user is redirected to after logging in.
      tags:
      - oauth
  /oauth/login:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/oauth/login
        prod: https://csbackend.fly.dev/oauth/login
      produces:
      - application/json
      responses: {}
      summary: Redirect user to third party login
      tags:
      - oauth
  /oauth/logout:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        dev: http://localhost:8080/oauth/logout
        prod: https://csbackend.fly.dev/oauth/logout
      produces:
      - application/json
      responses: {}
      summary: Log user out
      tags:
      - oauth
securityDefinitions:
  SessionToken:
    in: header
    name: X-Session
    type: apiKey
swagger: "2.0"
